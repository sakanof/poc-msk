apiVersion: v1
kind: Pod
metadata:
  name: kafka-producer
  namespace: ${APPLICATION_NAMESPACE}
spec:
  serviceAccountName: ${SERVICE_ACCOUNT_WRITE}
  containers:
  - name: kafka-client
    image: apache/kafka:latest
    imagePullPolicy: IfNotPresent
    command:
      - /bin/bash
      - -c
      - |
        wget https://github.com/aws/aws-msk-iam-auth/releases/download/v2.2.0/aws-msk-iam-auth-2.2.0-all.jar -P /opt/kafka/libs && \
        echo 'alias create_topic="/opt/kafka/bin/kafka-topics.sh --bootstrap-server $BOOTSTRAP_SERVER --command-config /opt/kafka/config/client_iam.properties --create --topic ${TEST_TOPIC_NAME} --partitions 3 --replication-factor 3"' >> ~/.bashrc && \
        echo 'alias producer="/opt/kafka/bin/kafka-console-producer.sh --topic ${TEST_TOPIC_NAME} --bootstrap-server $BOOTSTRAP_SERVER --producer.config /opt/kafka/config/client_iam.properties"' >> ~/.bashrc && \
        echo 'alias consumer="/opt/kafka/bin/kafka-console-consumer.sh --topic ${TEST_TOPIC_NAME} --group test-group --bootstrap-server $BOOTSTRAP_SERVER --consumer.config /opt/kafka/config/client_iam.properties"' >> ~/.bashrc
        sleep 3600
    env:
      - name: BOOTSTRAP_SERVER
        value: "${BOOTSTRAP_SERVER}"
    resources:
      requests:
        memory: "256Mi"
        cpu: "250m"
      limits:
        memory: "256Mi"
        cpu: "250m"
    volumeMounts:
      - name: client-properties-volume
        mountPath: /opt/kafka/config/client_iam.properties
        subPath: client_iam.properties
  volumes:
    - name: client-properties-volume
      configMap:
        name: client-properties-configmap-producer
  restartPolicy: Always

---
apiVersion: v1
kind: Pod
metadata:
  name: kafka-consumer
  namespace: ${APPLICATION_NAMESPACE}
spec:
  serviceAccountName: ${SERVICE_ACCOUNT_READ}
  containers:
  - name: kafka-client
    image: apache/kafka:latest
    imagePullPolicy: IfNotPresent
    command:
      - /bin/bash
      - -c
      - |
        wget https://github.com/aws/aws-msk-iam-auth/releases/download/v2.2.0/aws-msk-iam-auth-2.2.0-all.jar -P /opt/kafka/libs && \
        echo 'alias create_topic="/opt/kafka/bin/kafka-topics.sh --bootstrap-server $BOOTSTRAP_SERVER --command-config /opt/kafka/config/client_iam.properties --create --topic ${TEST_TOPIC_NAME} --partitions 3 --replication-factor 3"' >> ~/.bashrc && \
        echo 'alias producer="/opt/kafka/bin/kafka-console-producer.sh --topic ${TEST_TOPIC_NAME} --bootstrap-server $BOOTSTRAP_SERVER --producer.config /opt/kafka/config/client_iam.properties"' >> ~/.bashrc && \
        echo 'alias consumer="/opt/kafka/bin/kafka-console-consumer.sh --topic ${TEST_TOPIC_NAME} --group test-group --bootstrap-server $BOOTSTRAP_SERVER --consumer.config /opt/kafka/config/client_iam.properties"' >> ~/.bashrc
        sleep 3600
    env:
      - name: BOOTSTRAP_SERVER
        value: "${BOOTSTRAP_SERVER}"
    resources:
      requests:
        memory: "256Mi"
        cpu: "250m"
      limits:
        memory: "256Mi"
        cpu: "250m"
    volumeMounts:
      - name: client-properties-volume
        mountPath: /opt/kafka/config/client_iam.properties
        subPath: client_iam.properties
  volumes:
    - name: client-properties-volume
      configMap:
        name: client-properties-configmap-consumer
  restartPolicy: Always

---
apiVersion: v1
kind: Pod
metadata:
  name: kafka-topic-owner
  namespace: ${APPLICATION_NAMESPACE}
spec:
  serviceAccountName: ${SERVICE_ACCOUNT_TOPIC_OWNER}
  containers:
  - name: kafka-client
    image: apache/kafka:latest
    imagePullPolicy: IfNotPresent
    command:
      - /bin/bash
      - -c
      - |
        wget https://github.com/aws/aws-msk-iam-auth/releases/download/v2.2.0/aws-msk-iam-auth-2.2.0-all.jar -P /opt/kafka/libs && \
        echo 'alias create_topic="/opt/kafka/bin/kafka-topics.sh --bootstrap-server $BOOTSTRAP_SERVER --command-config /opt/kafka/config/client_iam.properties --create --topic ${TEST_TOPIC_NAME} --partitions 3 --replication-factor 3"' >> ~/.bashrc && \
        echo 'alias producer="/opt/kafka/bin/kafka-console-producer.sh --topic ${TEST_TOPIC_NAME} --bootstrap-server $BOOTSTRAP_SERVER --producer.config /opt/kafka/config/client_iam.properties"' >> ~/.bashrc && \
        echo 'alias consumer="/opt/kafka/bin/kafka-console-consumer.sh --topic ${TEST_TOPIC_NAME} --group test-group --bootstrap-server $BOOTSTRAP_SERVER --consumer.config /opt/kafka/config/client_iam.properties"' >> ~/.bashrc
        sleep 3600
    env:
      - name: BOOTSTRAP_SERVER
        value: "${BOOTSTRAP_SERVER}"
    resources:
      requests:
        memory: "256Mi"
        cpu: "250m"
      limits:
        memory: "256Mi"
        cpu: "250m"
    volumeMounts:
      - name: client-properties-volume
        mountPath: /opt/kafka/config/client_iam.properties
        subPath: client_iam.properties
  volumes:
    - name: client-properties-volume
      configMap:
        name: client-properties-configmap-topic-owner
  restartPolicy: Always